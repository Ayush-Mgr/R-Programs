library(datasets)  # Load built-in datasets
library(datasets)  # Load built-in datasets
library(datasets)
library(datasets)
library(datasets)library(datasets)
library(datasets)
head(iris)
summary(iris)
plot(iris)
# CLEAN UP
# CLEAN UP #################################################
# Clear packages
detach("package:datasets", unload = TRUE)  # For base
Clear packages
detach("package:datasets", unload = TRUE)  # For base
detach("package:datasets", unload = TRUE)  # For base
q()
cat(z)
x <- 1
y<- 2
z <-x+y
cat(z)
save.image("C:\\Users\\user\\Documents\\simple_wp1")
load("C:\\Users\\user\\Documents\\.RData")
q()
q()
load("C:\\Users\\user\\Documents\\.RData")
q()
q()
varo=c(1,2,3,5)
varoo=c(6,7,8,4)
df=data.frame(varo,varoo)
View(df)
print(df)
lis=list(a,b,1)
lis=list(b,1)
print(varo)
print(varoo)
lis=list('a','b',1)
a=array(varo,dim =c(2,2,2) )
varo=c(1,2,3,5)
varoo=c(6,7,8,4)
df=data.frame(varo,varoo)
print(df)
lis=list('a','b',1)
a=array(varo,dim =c(2,2,2) )
a=array(varo,dim =c(2,2,2) )
print(a)
a=array(varo,dim =c(2,2,3) )
print(a)
a=array(varo,dim =c(2,3,3) )
print(a)
a=array(varo,dim =c(6,3,3) )
print(a)
a=array(varo,varoo,dim =c(6,3,3) )
varoo=c(6:23,4)
a=array(varo,dim =c(6,3,3) )
print(a)
m=matrix(varo,12,12,12=TRUE)
m=matrix(varo,12,12,by row = TRUE)
m=matrix(varo,12,12,byrow = TRUE)
print(m)
m=matrix(varoo,12,12,byrow = TRUE)
print(m)
View(lis)
view(lis)
print(m)
save(list = all(names(TRUE)),file = 'DataStruct.Rdata')
save(list = all(names = TRUE),file = 'DataStruct.Rdata')
save(list = all.names = TRUE,file = 'DataStruct.Rdata')
save(list =(all.names = TRUE),file = 'DataStruct.Rdata')
save(list =ls(all.names = TRUE),file = 'DataStruct.Rdata')
load(file = 'DataStruct.Rdata')
load(file = 'DataStruct.Rdata')
load(file = 'DataStruct.Rdata')
load(file = 'DataStruct.Rdata')
load(file = 'DataStruct.Rdata')
load("~/DataStruct.Rdata")
x=NULL
View(m)
view(lis)
view(m)
View(m)
View(m)
View(lis)
View(m)
View(lis)
#data types
Numeric_Datatype = 5.1
Numeric_Datatype2 = 5
Int_Datatype=5L
_char_Datatype='A'
char_Datatype='A'
string_Datatype="str"
Logical_Datatype=TRUE
Logical_Datatype2=FALSE
typeof(Numeric_Datatype)
typeof(Numeric_Datatype2)
typeof(Int_Datatype)
typeof(char_Datatype)
typeof(string_Datatype)
typeof(Logical_Datatype)
typeof(Logical_Datatype2)
source("~/.active-rstudio-document")
getwd()
csv_Data<- read.csv('P2-Mispriced-Diamonds.csv')
head(csv_Data)
View(csv_Data)
csv_Data<- read.csv('P2-Mispriced-Diamonds.csv',sep = ',',header = TRUE)
View(csv_Data)
csv_Data<- read.csv('P2-Mispriced-Diamonds.csv',sep = ',',header = FALSE)
csv_Data<- read.csv('P2-Mispriced-Diamonds.csv',sep = ',',header = TRUE)
csv_Data<- read.csv('P2-Mispriced-Diamonds.csv',header = TRUE,sep = ',')
head(csv_Data)
csv_Data<- read.csv('P2-Mispriced-Diamonds.csv',header = TRUE)
csv_Data<- read.csv('P2-Mispriced-Diamonds.csv',head = TRUE)
csv_Data<- read.csv('P2-Mispriced-Diamonds.csv',header = TRUE)
names(csv_Data)=c("Diamond carat","Damond Clarity","Diamond price")
head(csv_Data)
var<- c(1,NA,3)
is.na(var)
mean(var)
mean(var,NA=FALSE)
mean(var,na.rm = FALSE)
mean(var,na.rm = TRUE)
install.packages('swirl')
library('swirl')
library("swirl")
swirl()
5+2
5+7
x<-5
x<-5+7
x
main()
1:20
vec = c(1:20)
c(1:20)
my_vector<-c(1:20)
my_vector<-1:20
View(my_vector)
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) = c(4,5)
dim(my_vector) <- c(4,5)
dim(my_vector)
View(my_vector)
attributes(my_vector)
View(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
View(my_matrix)
print(m)
View(m)
m=matrix(varoo,12,12,byrow = TRUE,2)
m=matrix(varoo,12,12,byrow = TRUE,dimname=2)
m=matrix(varoo,12,12,byrow = TRUE,dimnames=2)
m=matrix(varoo,12,12,byrow = TRUE,dimnames =2)
varoo=c(6:23,4)
m=matrix(varoo,12,12,byrow = TRUE,dimnames =2)
my_matrix2 <- 1:20
my_matrix2 <- c(1:20)
my_matrix2 <- c(1:20,2,3)
my_matrix2 <- matrix(1:20,2,3)
info()
my_matrix2 <- matrix(1:20,2,3)
info()
bye()
clear
clean
clsr
cat
setwd(c:\Users\user\Desktop\cod\.git\R-Programs\R-Basic-Programs)
setwd(c:\user\Desktop\cod\.git\R-Programs\R-Basic-Programs)
getwd()
setwd()
setwd(dir = "C:\Users\user\Desktop\cod\.git\R-Programs\R-Basic-Programs")
setwd(dir = C:\Users\user\Desktop\cod\.git\R-Programs\R-Basic-Programs)
?setwd
setwd(dir)
setwd("C:\Users\user\Desktop\cod\.git\R-Programs\R-Basic-Programs")
setwd("C:/Users/user/Desktop/cod/.git/R-Programs/R-Basic-Programs")
setwd("C:/Users/user/Desktop/cod/.git/R-Programs/R-Basic-Programs")
getwd()
getwd()
for (variable in 1:10) {
cat("repeat no"variable)
for (variable in 1:10) {
print("repeat no"variable)
for (variable in 1:10) {
print("repeat no"variable)
for (variable in 1:10) {
print("repeat no")
}
for (variable in 1:10) {
print("repeat no",variable)
}
for (variable in 1:10) {
cat("repeat no",variable," ")
}
for (variable in 1:10) {
cat("repeat no",variable,"\n")
}
e loop
variable <- 0
while (variable != 10) {
variable <-variable +1
cat("repeat no",variable,"\n")
}
repeat{
variable <-variable +1
cat("repeat no",variable,"\n")
if(variable==10){break}
}
repeat{
variable <-variable +1
cat("repeat no",variable,"\n")
if(variable==10){break}
}
variable <- 0
repeat{
variable <-variable +1
cat("repeat no",variable,"\n")
if(variable==10){
break}
}
search()
sy_dt<-Sys.Date()
print(sy_dt)
date()
sys.date()
class(sy_dt)
custom_dt <- as.Date("2020-06-31")
custom_dt <- as.Date(2020-06-31)
print(custom_dt)
custom_dt <- as.Date(2020-31-06)
print(custom_dt)
?as.Date
custom_dt <- as.Date(2020-31-06,origin )
custom_dt <- as.Date(2020-31-06,origin = TRUE )
custom_dt <- as.Date("2020-31-06")
custom_dt <- as.Date("2020-03-06")
print(custom_dt)
custom_dt <- as.Date("2020-31-06",format("%Y,%d,%m")) #change format
print(custom_dt)
print(custom_dt)
custom_dt <- as.Date("2020-30-06",format("%Y,%d,%m")) #change format
print(custom_dt)
custom_dt <- as.Date("2020-30-06",format("%Y,%d,%m")) #change format
print(custom_dt)
custom_dt2 <- as.Date("2020-30-06",format("%Y,%d,%m")) #change format
print(custom_dt)
print(custom_dt2)
custom_dt2 <- as.Date("2020-30-06",format("%Y,%d,%m")) #change format
print(custom_dt2)
custom_dt2 <- as.Date("2020-30-06",format("%Y-%d-%m")) #change format
print(custom_dt2)
custom_dt <- as.Date("2020-03-06") #set custom date
custom_dt2 <- as.Date("2020-30-06",format("%Y-%d-%m") ,
tryFormats = c("%Y-%d-%m", "%Y/%d/%m"),
optional = FALSE)
custom_dt3 <- as.Date("2020-30-06",format("%Y-%d-%m") ,
tryFormats = c("%Y-%d-%m", "%Y/%d/%m"),
optional = FALSE)
print(custom_dt3)
custom_dt3 <- as.Date("2020-30-06",format("%Y-%d-%m") ,
tryFormats = c("%Y-%d-%m", "%Y/%d/%m"))
print(custom_dt3)
?strptime
custom_dt2 <- as.Date("2020 30 06",format("%Y %d %m")) #un matching format format
print(custom_dt2)
?apply
m = matrix(c(1:10,5:20),nrow = 2
,ncol = 1)
m = matrix(c(1:10,5:20),nrow = 2,ncol = 1)
m = matrix(c(1:10,5:20),nrow = 2,ncol = 2)
m = matrix(c(1:10,5:20),2,2)
m = matrix(c(1:10,5:20),4,4)
m = matrix(c(1:10,5:20),4,10)
m = matrix(c(1:10,5:20),10,10)
View(m)
m = matrix(c(1:10),10,10)
View(m)
mody_m=apply(m,2,*)
mody_m=apply(m,2,'multiply')
mody_m=apply(m,2,multiply)
mody_m=apply(m,2,sum)
mody_m=apply(m,2,multiply)
View(m)
m()
mody_m=apply(m,2,sum)
View(mody_m)
mody_m
mody_m=apply(m,2,function(x){x-20})
mody_m=apply(m,2,function(x){x-10})
View(mody_m)
mody_m=apply(m,1,function(x){x-10})
View(mody_m)
mody_m2=apply(m,2,function(x){x-10})
View(mody_m2)
m = matrix(c(1:10),10,10))
mody_m2=apply(m,2,function(x){x-10})
mody_m=apply(m,1,function(x){x-10})
View(mody_m)
View(mody_m2)
mody_m2=apply(m,2,sum)
mody_m2
mody_m=apply(m,1,sum)
mody_m
m = matrix(c(1:10),10,10))
m = matrix(c(1:10),10,10))
m = matrix(c(1:10),10,10)
m = matrix(c(1:10),10,10)
m
list_r=list('a',1:2)
list_r
list_rmody<-apply(list_r,2,sum)
list_rmody<-lapply(list_r,2,sum)
list_rmody<-lapply(list_r,sum)
list_r=list('a',(1:2))
list_rmody<-lapply(list_r,sum)
list_r
list_r=list('a',(1:20))
list_r
list_r=list('a',1:20)
list_rmody<-lapply(list_r,sum)
list_r=list(c(1:10,10:20),1:20)
list_r
list_r=list(n=matrix(1:10,10:20,2,2),1:20)
list_r
list_r=list(n=matrix(1:10,5),1:20)
list_r
list_r=list(n=matrix(1:9,3),1:20)
list_r
list_r=list(n=matrix(1:9,3),1:20,array(c(10:20)dim = c(5,5,2)))
list_r
print(a)
list_r=list(n=matrix(1:9,3),1:20,array(c(10:20)dim = c(5,5,2)))
list_r=list(n=matrix(1:9,3),1:20,array(c(10:20),dim = c(5,5,2)))
list_r
list_rmody<-lapply(list_r,sum)
list_rmody
list_rmody<-lapply(list_r,1,sum)
?lapply
list_rmody<-lapply(list_r,function(x){cat(x"wtf")})#apply() for lists only int or string
list_rmody<-lapply(list_r,function(x){cat(x,"wtf")})#apply() for lists only int or string
list_rmody<-lapply(list_r,function(x){cat(x,"wtf","\n")})#apply() for lists only int or string
list_rmody<-lapply(list_r,function(x){no=1,no= no+1,cat(x,"wtf",no,"\n")})#apply() for lists only int or string
list_rmody<-lapply(list_r,function(x){
no=1
no= no+1
cat(x,"wtf",no,"\n")})#apply() for lists only int or string
list_rmody
list_rmody<-lapply(list_r,function(x){
no=1
no= no+1
cat(x,"wtf",no,"\n")})#apply() for lists only int or string
list_rmody<-lapply(list_r,function(x){cat(x,"wtf","\n")})#apply() for lists only int or string
list_rmody
list_rmody<-lapply(list_r,function(x){paste(x,"wtf","\n")})#apply() for lists only int or string
list_rmody
list_rmody<-lapply(list_r,function(x){paste(x,"wtf")})#apply() for lists only int or string
list_rmody
list_rmody2<-sapply(list_r,function(x){paste(x,"wtf")})#apply() for lists only int or string
list_rmody2
list_rmody2<-sapply(list_r,sum)})#apply() for lists only int or string
list_rmody2<-sapply(list_r,sum)#apply() for lists only int or string
list_rmody2
?data.frame
o
df=data.frame(varo,varoo,varo)
df=data.frame(varo,varoo)
varoo=c(6:23,4)
df=data.frame(varo,varoo,varo)
df=data.frame(varo,varoo)
varo=c(1,2,3,5)
varoo=c(6:23,4)
df=data.frame(varo,varoo)
varo=c(1,2,3,5, rep(NA, 15))
df=data.frame(varo,varoo,varo)
print(df)
?na
?NA
